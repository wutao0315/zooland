using Zooyard.Utils;

namespace Zooyard.Rpc.NettyImpl.Constant
{
    /// <summary>
    /// The type Configuration keys.
    /// </summary>
    public class ConfigurationKeys
    {

		public const string SEATA_PREFIX = "zoota:";
		public const string SERVICE_PREFIX = "service:";
		public const string STORE_PREFIX = "store:";
		public const string MODE = "mode";
		public static readonly string STORE_MODE = STORE_PREFIX + MODE;
		public static readonly string STORE_LOCK_MODE = STORE_PREFIX + "lock:" + MODE;
		public static readonly string STORE_SESSION_MODE = STORE_PREFIX + "session:" + MODE;
		public static readonly string STORE_PUBLIC_KEY = STORE_PREFIX + "publicKey";
		public static readonly string STORE_FILE_PREFIX = STORE_PREFIX + "file:";
		public static readonly string STORE_FILE_DIR = STORE_FILE_PREFIX + "dir";
		public static readonly string SERVICE_GROUP_MAPPING_PREFIX = SERVICE_PREFIX + "vgroupMapping:";
		public const string GROUPLIST_POSTFIX = ":grouplist";
		public static readonly string SERVER_NODE_SPLIT_CHAR = SystemPropertyUtil.Get("line:separator");
		public const string ENABLE_DEGRADE_POSTFIX = "enableDegrade";
		public const string CLIENT_PREFIX = "client:";
		public const string SERVER_PREFIX = "server:";
		public const string TRANSPORT_PREFIX = "transport:";
		public static readonly string CLIENT_RM_PREFIX = CLIENT_PREFIX + "rm:";
		public static readonly string CLIENT_ASYNC_COMMIT_BUFFER_LIMIT = CLIENT_RM_PREFIX + "asyncCommitBufferLimit";
		public static readonly string CLIENT_RM_LOCK_PREFIX = CLIENT_RM_PREFIX + "lock:";
		public static readonly string CLIENT_LOCK_RETRY_TIMES = CLIENT_RM_LOCK_PREFIX + "retryTimes";
		public static readonly string CLIENT_LOCK_RETRY_INTERVAL = CLIENT_RM_LOCK_PREFIX + "retryInterval";
		public static readonly string CLIENT_LOCK_RETRY_POLICY_BRANCH_ROLLBACK_ON_CONFLICT = CLIENT_RM_LOCK_PREFIX + "retryPolicyBranchRollbackOnConflict";
		public static readonly string SERVICE_SESSION_RELOAD_READ_SIZE = STORE_FILE_PREFIX + "sessionReloadReadSize";
		public static readonly string CLIENT_REPORT_SUCCESS_ENABLE = CLIENT_RM_PREFIX + "reportSuccessEnable";
		public static readonly string CLIENT_SAGA_BRANCH_REGISTER_ENABLE = CLIENT_RM_PREFIX + "sagaBranchRegisterEnable";
		public static readonly string CLIENT_SAGA_JSON_PARSER = CLIENT_RM_PREFIX + "sagaJsonParser";
		public static readonly string CLIENT_SAGA_RETRY_PERSIST_MODE_UPDATE = CLIENT_RM_PREFIX + "sagaRetryPersistModeUpdate";
		public static readonly string CLIENT_SAGA_COMPENSATE_PERSIST_MODE_UPDATE = CLIENT_RM_PREFIX + "sagaCompensatePersistModeUpdate";
		public static readonly string CLIENT_REPORT_RETRY_COUNT = CLIENT_RM_PREFIX + "reportRetryCount";
		public static readonly string CLIENT_TABLE_META_CHECK_ENABLE = CLIENT_RM_PREFIX + "tableMetaCheckEnable";
		public static readonly string CLIENT_TABLE_META_CHECKER_INTERVAL = CLIENT_RM_PREFIX + "tableMetaCheckerInterval";
		public static readonly string TCC_ACTION_INTERCEPTOR_ORDER = CLIENT_RM_PREFIX + "tccActionInterceptorOrder";
		public static readonly string CLIENT_TM_PREFIX = CLIENT_PREFIX + "tm:";
		public static readonly string CLIENT_TM_COMMIT_RETRY_COUNT = CLIENT_TM_PREFIX + "commitRetryCount";
		public static readonly string CLIENT_TM_ROLLBACK_RETRY_COUNT = CLIENT_TM_PREFIX + "rollbackRetryCount";
		public static readonly string DEFAULT_GLOBAL_TRANSACTION_TIMEOUT = CLIENT_TM_PREFIX + "defaultGlobalTransactionTimeout";
		public static readonly string SERIALIZE_FOR_RPC = TRANSPORT_PREFIX + "serialization";
		public static readonly string COMPRESSOR_FOR_RPC = TRANSPORT_PREFIX + "compressor";
		public const string STORE_DB_PREFIX = "store:db:";
		public const string STORE_REDIS_PREFIX = "store:redis:";
		public static readonly string STORE_DB_GLOBAL_TABLE = STORE_DB_PREFIX + "globalTable";
		public static readonly string STORE_DB_BRANCH_TABLE = STORE_DB_PREFIX + "branchTable";
		public static readonly string STORE_DB_DATASOURCE_TYPE = STORE_DB_PREFIX + "datasource";
		public static readonly string STORE_DB_TYPE = STORE_DB_PREFIX + "dbType";
		public static readonly string STORE_DB_DRIVER_CLASS_NAME = STORE_DB_PREFIX + "driverClassName";
		public static readonly string STORE_DB_MAX_WAIT = STORE_DB_PREFIX + "maxWait";
		public static readonly string STORE_DB_URL = STORE_DB_PREFIX + "url";
		public static readonly string STORE_DB_USER = STORE_DB_PREFIX + "user";
		public static readonly string STORE_DB_PASSWORD = STORE_DB_PREFIX + "password";
		public static readonly string STORE_DB_MIN_CONN = STORE_DB_PREFIX + "minConn";
		public static readonly string STORE_DB_MAX_CONN = STORE_DB_PREFIX + "maxConn";
		public static readonly string STORE_DB_LOG_QUERY_LIMIT = STORE_DB_PREFIX + "queryLimit";
		public static readonly string LOCK_DB_TABLE = STORE_DB_PREFIX + "lockTable";
		public static readonly string SERVER_RPC_PORT = SERVER_PREFIX + "rpcPort";
		public static readonly string RECOVERY_PREFIX = SERVER_PREFIX + "recovery:";
		public static readonly string COMMITING_RETRY_PERIOD = RECOVERY_PREFIX + "committingRetryPeriod";
		public static readonly string ASYN_COMMITING_RETRY_PERIOD = RECOVERY_PREFIX + "asynCommittingRetryPeriod";
		public static readonly string ROLLBACKING_RETRY_PERIOD = RECOVERY_PREFIX + "rollbackingRetryPeriod";
		public static readonly string TIMEOUT_RETRY_PERIOD = RECOVERY_PREFIX + "timeoutRetryPeriod";
		public const string CLIENT_UNDO_PREFIX = "client:undo:";
		public static readonly string TRANSACTION_UNDO_DATA_VALIDATION = CLIENT_UNDO_PREFIX + "dataValidation";
		public static readonly string TRANSACTION_UNDO_LOG_SERIALIZATION = CLIENT_UNDO_PREFIX + "logSerialization";
		public static readonly string TRANSACTION_UNDO_ONLY_CARE_UPDATE_COLUMNS = CLIENT_UNDO_PREFIX + "onlyCareUpdateColumns";
		public static readonly string CLIENT_UNDO_COMPRESS_PREFIX = CLIENT_UNDO_PREFIX + "compress:";
		public static readonly string CLIENT_UNDO_COMPRESS_TYPE = CLIENT_UNDO_COMPRESS_PREFIX + "type";
		public static readonly string CLIENT_UNDO_COMPRESS_ENABLE = CLIENT_UNDO_COMPRESS_PREFIX + "enable";
		public static readonly string CLIENT_UNDO_COMPRESS_THRESHOLD = CLIENT_UNDO_COMPRESS_PREFIX + "threshold";
		public const string METRICS_PREFIX = "metrics:";
		public const string METRICS_ENABLED = "enabled";
		public const string METRICS_REGISTRY_TYPE = "registryType";
		public const string METRICS_EXPORTER_LIST = "exporterList";
		public const string METRICS_EXPORTER_PROMETHEUS_PORT = "exporterPrometheusPort";
		public static readonly string SERVER_UNDO_PREFIX = SERVER_PREFIX + "undo:";
		public static readonly string TRANSACTION_UNDO_LOG_SAVE_DAYS = SERVER_UNDO_PREFIX + "logSaveDays";
		public static readonly string TRANSACTION_UNDO_LOG_DELETE_PERIOD = SERVER_UNDO_PREFIX + "logDeletePeriod";
		public static readonly string TRANSACTION_UNDO_LOG_TABLE = CLIENT_UNDO_PREFIX + "logTable";
		public const string LOG_PREFIX = "log:";
		public static readonly string TRANSACTION_LOG_EXCEPTION_RATE = LOG_PREFIX + "exceptionRate";
		public static readonly string MAX_COMMIT_RETRY_TIMEOUT = SERVER_PREFIX + "maxCommitRetryTimeout";
		public static readonly string MAX_ROLLBACK_RETRY_TIMEOUT = SERVER_PREFIX + "maxRollbackRetryTimeout";
		public static readonly string ROLLBACK_RETRY_TIMEOUT_UNLOCK_ENABLE = SERVER_PREFIX + "rollbackRetryTimeoutUnlockEnable";
		public static readonly string RETRY_DEAD_THRESHOLD = SERVER_PREFIX + "retryDeadThreshold";
		public static readonly string DISTRIBUTED_LOCK_EXPIRE_TIME = SERVER_PREFIX + "distributedLockExpireTime";
		public static readonly string MIN_SERVER_POOL_SIZE = TRANSPORT_PREFIX + "minServerPoolSize";
		public static readonly string MAX_SERVER_POOL_SIZE = TRANSPORT_PREFIX + "maxServerPoolSize";
		public static readonly string MAX_TASK_QUEUE_SIZE = TRANSPORT_PREFIX + "maxTaskQueueSize";
		public static readonly string KEEP_ALIVE_TIME = TRANSPORT_PREFIX + "keepAliveTime";
		public static readonly string TRANSPORT_TYPE = TRANSPORT_PREFIX + "type";
		public static readonly string TRANSPORT_SERVER = TRANSPORT_PREFIX + "server";
		public static readonly string TRANSPORT_HEARTBEAT = TRANSPORT_PREFIX + "heartbeat";
		public static readonly string THREAD_FACTORY_PREFIX = TRANSPORT_PREFIX + "threadFactory:";
		public static readonly string BOSS_THREAD_PREFIX = THREAD_FACTORY_PREFIX + "bossThreadPrefix";
		public static readonly string WORKER_THREAD_PREFIX = THREAD_FACTORY_PREFIX + "workerThreadPrefix";
		public static readonly string SERVER_EXECUTOR_THREAD_PREFIX = THREAD_FACTORY_PREFIX + "serverExecutorThreadPrefix";
		public static readonly string SHARE_BOSS_WORKER = THREAD_FACTORY_PREFIX + "shareBossWorker";
		public static readonly string CLIENT_SELECTOR_THREAD_PREFIX = THREAD_FACTORY_PREFIX + "clientSelectorThreadPrefix";
		public static readonly string CLIENT_SELECTOR_THREAD_SIZE = THREAD_FACTORY_PREFIX + "clientSelectorThreadSize";
		public static readonly string CLIENT_WORKER_THREAD_PREFIX = THREAD_FACTORY_PREFIX + "clientWorkerThreadPrefix";
		public static readonly string BOSS_THREAD_SIZE = THREAD_FACTORY_PREFIX + "bossThreadSize";
		public static readonly string WORKER_THREAD_SIZE = THREAD_FACTORY_PREFIX + "workerThreadSize";
		public static readonly string SHUTDOWN_PREFIX = TRANSPORT_PREFIX + "shutdown:";
		public static readonly string SHUTDOWN_WAIT = SHUTDOWN_PREFIX + "wait";
		public static readonly string ENABLE_CLIENT_BATCH_SEND_REQUEST = TRANSPORT_PREFIX + "enableClientBatchSendRequest";
		public static readonly string DISABLE_GLOBAL_TRANSACTION = SERVICE_PREFIX + "disableGlobalTransaction";
		public static readonly string SQL_PARSER_TYPE = CLIENT_RM_PREFIX + "sqlParserType";
		public static readonly string STORE_REDIS_MODE = STORE_REDIS_PREFIX + "mode";
		public static readonly string STORE_REDIS_HOST = STORE_REDIS_PREFIX + "host";
		public static readonly string STORE_REDIS_PORT = STORE_REDIS_PREFIX + "port";
		public static readonly string STORE_REDIS_SSL = STORE_REDIS_PREFIX + "ssl";
		public static readonly string STORE_REDIS_SINGLE_PREFIX = STORE_REDIS_PREFIX + "single:";
		public static readonly string STORE_REDIS_SINGLE_HOST = STORE_REDIS_SINGLE_PREFIX + "host";
		public static readonly string STORE_REDIS_MIN_CONN = STORE_REDIS_PREFIX + "minConn";
		public static readonly string STORE_REDIS_SINGLE_PORT = STORE_REDIS_SINGLE_PREFIX + "port";
		public static readonly string STORE_REDIS_MAX_CONN = STORE_REDIS_PREFIX + "maxConn";
		public static readonly string STORE_REDIS_MAX_TOTAL = STORE_REDIS_PREFIX + "maxTotal";
		public static readonly string STORE_REDIS_DATABASE = STORE_REDIS_PREFIX + "database";
		public static readonly string STORE_REDIS_PASSWORD = STORE_REDIS_PREFIX + "password";
		public static readonly string STORE_REDIS_QUERY_LIMIT = STORE_REDIS_PREFIX + "queryLimit";
		public const string REDIS_SENTINEL_MODE = "sentinel";
		public const string REDIS_SINGLE_MODE = "single";
		public static readonly string STORE_REDIS_SENTINEL_PREFIX = STORE_REDIS_PREFIX + "sentinel:";
		public static readonly string STORE_REDIS_SENTINEL_MASTERNAME = STORE_REDIS_SENTINEL_PREFIX + "masterName";
		public static readonly string STORE_REDIS_SENTINEL_HOST = STORE_REDIS_SENTINEL_PREFIX + "sentinelHosts";
		public static readonly string CLIENT_DEGRADE_CHECK_PERIOD = CLIENT_TM_PREFIX + "degradeCheckPeriod";
		public static readonly string CLIENT_DEGRADE_CHECK = CLIENT_TM_PREFIX + "degradeCheck";
		public static readonly string CLIENT_DEGRADE_CHECK_ALLOW_TIMES = CLIENT_TM_PREFIX + "degradeCheckAllowTimes";
		public static readonly string TM_INTERCEPTOR_ORDER = CLIENT_TM_PREFIX + "interceptorOrder";
		public static readonly string SEATA_ACCESS_KEY = SEATA_PREFIX + "accesskey";
		public static readonly string SEATA_SECRET_KEY = SEATA_PREFIX + "secretkey";
		public const string EXTRA_DATA_SPLIT_CHAR = "\n";
		public const string EXTRA_DATA_KV_CHAR = "=";
		public static readonly string SERVER_ENABLE_CHECK_AUTH = SERVER_PREFIX + "enableCheckAuth";
		public const string APPLICATION_ID = "applicationId";
		public const string TX_SERVICE_GROUP = "txServiceGroup";
		public const string DATA_SOURCE_PROXY_MODE = "dataSourceProxyMode";

	}
}
