<objects xmlns="http://www.springframework.net"
             xmlns:aop="http://www.springframework.net/aop">

  <!--服务注入-->
  <!--<object id="SessionHost" type="Spring.ServiceModel.Activation.ServiceHostFactoryObject, Spring.Services">
    <property name="TargetName" value="SessionService" />
  </object>-->

  <object id="HelloServiceProcessor" type="RpcContractThrift.HelloService+AsyncProcessor, RpcContractThrift">
    <constructor-arg name="iAsync" ref="HelloServiceThriftImpl"/>
  </object>

  <object id="TransServerSocket" type="Thrift.Transports.Server.TServerSocketTransport, Thrift">
    <!--port-->
    <constructor-arg name="port" value="10009"/>
    <!--clientTimeout-->
    <constructor-arg name="clientTimeout" value="2000"/>
    <!--useBufferedSockets-->
    <constructor-arg name="useBufferedSockets" value="true"/>
  </object>

  <!--<object id="TransNamedPipeServerTransport" type="Thrift.Transports.Server.TNamedPipeServerTransport, Thrift">
    <constructor-arg name="pipeAddress" value=""/>
  </object>-->

  <!--<object id="MyX509Certificate2" type="System.Security.Cryptography.X509Certificates.X509Certificate2, System">
    -->
  <!--file-->
  <!--
    <constructor-arg name="fileName" value="app_data/keys/server.pem"/>
  </object>
  
  <object id="TransTLSServerSocket" type="Thrift.Transport.TTLSServerSocket, Thrift">
    -->
  <!--port-->
  <!--
    <constructor-arg name="port" value="9090"/>
    -->
  <!--clientTimeout-->
  <!--
    <constructor-arg name="clientTimeout" value="0"/>
    -->
  <!--useBufferedSockets-->
  <!--
    <constructor-arg name="useBufferedSockets" value="false"/>
    -->
  <!--certificate-->
  <!--
    <constructor-arg name="certificate" ref="MyX509Certificate2"/>
  </object>-->


  <object id="TransportFactory" type="Thrift.Transports.TTransportFactory, Thrift">
  </object>
  <!--<object id="FramedTransportFactory" type="Thrift.Transports.TFramedTransport+Factory, Thrift">
  </object>-->

  <!--
  <object id="CompactProtocolFactory" type="Thrift.Protocols.TCompactProtocol+Factory, Thrift">
  </object>
  <object id="JSONProtocolFactory" type="Thrift.Protocols.TJSONProtocol+Factory, Thrift">
  </object>
  <object id="BinaryProtocolFactory" type="Thrift.Protocols.TBinaryProtocol+Factory, Thrift">
  </object>
  -->
  <object id="CompactProtocolFactory" type="Thrift.Protocols.TCompactProtocol+Factory, Thrift">
  </object>


  <object id="AsyncBaseServer" type="Thrift.Server.AsyncBaseServer, Thrift">
    <!--processor-->
    <constructor-arg name="processor" ref="HelloServiceProcessor"/>
    <!--serverTransport-->
    <constructor-arg name="serverTransport" ref="TransServerSocket"/>
    <!--inputProtocolFactory-->
    <constructor-arg name="inputProtocolFactory" ref="CompactProtocolFactory"/>
    <!--outputProtocolFactory-->
    <constructor-arg name="outputProtocolFactory" ref="CompactProtocolFactory"/>
    <!--loggerFactory-->
    <constructor-arg name="loggerFactory" ref="LoggerFactory"/>
    <!--clientWaitingDelay-->
    <constructor-arg name="clientWaitingDelay" value="10"/>
  </object>
  
  <object id="ThriftServer" type="Zooyard.Rpc.ThriftImpl.ThriftServer, Zooyard.Rpc.ThriftImpl" parent="AbstractServer">
    <constructor-arg name="server" ref="AsyncBaseServer"/>
    <constructor-arg name="loggerFactory" ref="LoggerFactory"/>
  </object>


  <!--拦截控制层所有业务操作-->
  <!--<object id="Host.OpenSessionInView" type="Spring.Aop.Support.SdkRegularExpressionMethodPointcut, Spring.Aop">
    <property name="pattern" value="Member.Service.Facade.Implement.*"/>
  </object>-->

  <!--切面-->
  <!--<object id="Host.OpenSessionInViewModule" type="Member.Service.ServerHost.Core.OpenSessionInViewModule, Member.Service.ServerHost" singleton="false"/>-->

  <!--关联切面-->
  <!--<aop:config>
    <aop:advisor pointcut-ref="Host.OpenSessionInView" advice-ref="Host.OpenSessionInViewModule"/>
  </aop:config>-->
</objects>