<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="warn"
      internalLogFile="logfiles/internal-nlog.txt">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <!-- <variable name="myvar" value="myvalue"/> -->

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>
    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->
    <target xsi:type="File" name="f" fileName="${basedir}/App_Data/logs/error/${uppercase:${level}}/${shortdate}.log"
            encoding="utf-8" layout="${longdate} ${logger} ${message}" />

    <target xsi:type="File" name="systemError" fileName="${basedir}/App_Data/logs/error/${uppercase:${level}}/${shortdate}.log"
           encoding="utf-8" layout="${longdate} ${logger} ${message}"  archiveAboveSize="50000000" maxArchiveFiles="100" />

    <target xsi:type="File" name="categoryLog" fileName="${basedir}/App_Data/logs/${logger}/${shortdate}.log"
            encoding="utf-8"
            archiveAboveSize="50000000" maxArchiveFiles="100"
                 layout="${longdate} ${logger} ${message} ${exception:tostring}" />
    <target name="requestLog" xsi:type="AsyncWrapper">
      <target xsi:type="RetryingWrapper" retryCount="3">
        <target xsi:type="File" fileName="${basedir}/App_Data/requests/${event-context:item=Path}.log"
           encoding="utf-8"
           archiveAboveSize="50000000" maxArchiveFiles="100"
                layout="${longdate}${message}" />
      </target>
    </target>

    <target name="operateLog" xsi:type="AsyncWrapper">
      <target xsi:type="RetryingWrapper" retryCount="3">
        <target xsi:type="Database"
          dbUserName="sa"
          dbProvider="System.Data.SqlClient"
          connectionString="Data Source=192.168.1.105;Initial Catalog=SIT_UA_EXT;User ID=sa;Password=eq123!@#;">
          <commandText>
            insert into [dbo].[SYS_LOG_OPERATE] (
            [APP],[USER_ID],[USER_NAME],[NICK_NAME],[SESSION_ID],[PATH],[MESSAGE],[METHOD],[REQUEST],[RESPONSE],[STATUS_CODE],[IP_ADDRESS],[PORT],[ELAPSED],[CREATER],[CREATE_USER_ID]
            ) values (
            @App, @UserId, @UserName, @NickName,@SessionId, @Path, @Message, @Method, @Request, @Response, @StatusCode, @IpAddress, @Port, @Elapsed, @UserName, @UserId
            );
          </commandText>
          <parameter name="@App" layout="equality.member.api.ui" />
          <parameter name="@UserId" layout="${event-context:item=UserId}" />
          <parameter name="@UserName" layout="${event-context:item=UserName}" />
          <parameter name="@NickName" layout="${event-context:item=NickName}" />
          <parameter name="@SessionId" layout="${event-context:item=SessionId}" />
          <parameter name="@Path" layout="${event-context:item=Path}" />
          <parameter name="@Message" layout="${event-context:item=Message}" />
          <parameter name="@Method" layout="${event-context:item=Method}" />
          <parameter name="@Request" layout="${event-context:item=Request}" />
          <parameter name="@Response" layout="${event-context:item=Response}" />
          <parameter name="@StatusCode" layout="${event-context:item=StatusCode}" />
          <parameter name="@IpAddress" layout="${event-context:item=IpAddress}" />
          <parameter name="@Port" layout="${event-context:item=Port}" />
          <parameter name="@Elapsed" layout="${event-context:item=Elapsed}" />
        </target>
      </target>
    </target>

    <target xsi:type="Null" name="blackhole" />

    <target name="db" xsi:type="AsyncWrapper">
      <target xsi:type="RetryingWrapper" retryCount="3">
        <target xsi:type="Database"
          dbUserName="sa"
          dbProvider="System.Data.SqlClient"
          connectionString="Data Source=192.168.1.105;Initial Catalog=SIT_UA_EXT;User ID=sa;Password=eq123!@#;">
          <commandText>
            insert into [dbo].[SYS_LOG_EXCEPTION] (
            [APP],[LEVEL],[MESSAGE],[LOG_DT],[LOGGER],[CONTENT]
            ) values (
            @app, @level, @message, @log_dt, @logger, @content
            );
          </commandText>
          <parameter name="@app" layout="EQuality.MES.Web" />
          <parameter name="@level" layout="${level:uppercase=true}" />
          <parameter name="@message" layout="${message}" />
          <parameter name="@log_dt" layout="${date}" />
          <parameter name="@logger" layout="${logger}" />
          <parameter name="@content" layout="${stacktrace}" />
        </target>
      </target>
    </target>

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/App_Data/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
  </targets>

  <rules>
    <!-- add your logging rules here -->
    <logger name="RequestLogger" minlevel="Debug" writeTo="requestLog" />
    <logger name="OpreatorLogger" minlevel="Debug" writeTo="operateLog" />
    <logger name="Microsoft.*" minlevel="Debug" writeTo="blackhole" final="true" />
    <logger name="EQuality.Keeper.Support.*" minlevel="Debug" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Debug" writeTo="categoryLog" />
    <logger name="*" minlevel="Error" writeTo="f"  />
    <logger name="*" minlevel="Error" writeTo="db" />
    <logger name="*" minlevel="Warn" writeTo="systemError"  />
    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
