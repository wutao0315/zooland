<objects xmlns="http://www.springframework.net">
  <object id="DefaultMergers" type="System.Collections.Generic.Dictionary&lt;System.Type, Zooyard.Core.IMerger&gt;, mscorlib">
    <constructor-arg>
      <dictionary key-type="System.Type" value-type="Zooyard.Core.IMerger, Zooyard.Core">
        <entry value-ref="ArrayMerger" >
          <key>
            <expression value="T(System.Array, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="BooleanArrayMerger" >
          <key>
            <expression value="T(System.Boolean, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="ByteArrayMerger" >
          <key>
            <expression value="T(System.Byte, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="CharArrayMerger" >
          <key>
            <expression value="T(System.Char, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="DoubleArrayMerger" >
          <key>
            <expression value="T(System.Double, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="FloatArrayMerger" >
          <key>
            <expression value="T(System.Single, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="ShortArrayMerger" >
          <key>
            <expression value="T(System.Int16, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="IntArrayMerger" >
          <key>
            <expression value="T(System.Int32, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="LongArrayMerger" >
          <key>
            <expression value="T(System.Int64, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="ListMerger" >
          <key>
            <expression value="T(System.Collections.Generic.IList&lt;System.Object&gt;, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="DictionaryMerger" >
          <key>
            <expression value="T(System.Collections.Generic.IDictionary&lt;System.Object, System.Object&gt;, mscorlib)"/>
          </key>
        </entry>
        <entry value-ref="SetMerger" >
          <key>
            <expression value="T(System.Collections.Generic.ISet&lt;System.Object&gt;, System)"/>
          </key>
        </entry>

      </dictionary>
    </constructor-arg>
  </object>

  <object id="MyMergers" type="System.Collections.Generic.Dictionary&lt;string, Zooyard.Core.IMerger&gt;, mscorlib">
    <constructor-arg>
      <dictionary key-type="string" value-type="Zooyard.Core.IMerger, Zooyard.Core">
        <entry key="hash" value-ref="ArrayMerger" />
      </dictionary>
    </constructor-arg>
  </object>

  <object id="ArrayMerger" type="Zooyard.Rpc.Merger.ArrayMerger, Zooyard.Rpc">
  </object>
  <object id="BooleanArrayMerger" type="Zooyard.Rpc.Merger.BooleanArrayMerger, Zooyard.Rpc">
  </object>
  <object id="ByteArrayMerger" type="Zooyard.Rpc.Merger.ByteArrayMerger, Zooyard.Rpc">
  </object>
  <object id="CharArrayMerger" type="Zooyard.Rpc.Merger.CharArrayMerger, Zooyard.Rpc">
  </object>
  <object id="DoubleArrayMerger" type="Zooyard.Rpc.Merger.DoubleArrayMerger, Zooyard.Rpc">
  </object>
  <object id="FloatArrayMerger" type="Zooyard.Rpc.Merger.FloatArrayMerger, Zooyard.Rpc">
  </object>
  <object id="IntArrayMerger" type="Zooyard.Rpc.Merger.IntArrayMerger, Zooyard.Rpc">
  </object>
  <object id="ListMerger" type="Zooyard.Rpc.Merger.ListMerger&lt;System.Object&gt;, Zooyard.Rpc">
  </object>
  <object id="LongArrayMerger" type="Zooyard.Rpc.Merger.LongArrayMerger, Zooyard.Rpc">
  </object>
  <object id="DictionaryMerger" type="Zooyard.Rpc.Merger.DictionaryMerger&lt;System.Object, System.Object&gt;, Zooyard.Rpc">
  </object>
  <object id="SetMerger" type="Zooyard.Rpc.Merger.SetMerger&lt;System.Object&gt;, Zooyard.Rpc">
  </object>
  <object id="ShortArrayMerger" type="Zooyard.Rpc.Merger.ShortArrayMerger, Zooyard.Rpc">
  </object>
  
</objects>