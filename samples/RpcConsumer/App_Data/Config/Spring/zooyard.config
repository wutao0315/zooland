<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:zy="http://www.springframework.net/zy">

  <!-- Old fashion way -->
  <!-- returns ZooyardFactory<HelloService>("helloServiceEndpoint").CreateYard() -->
  <!--<object id="serverAppHelloService"
          type="RpcContract.IHelloService, RpcContract"
          factory-object="serverAppHelloServiceZooyardFactory"
          factory-method="CreateYard" />
   -->
  <!--
  <object id="serverAppHelloServiceZooyardFactory"
          type="Zooyard.Core.ZooyardFactory&lt;RpcContract.IHelloService>, Zooyard.Core">
    <constructor-arg name="endpointConfigurationName" value="serverAppHelloServiceEndpoint" />
  </object>-->

  <!--<zy:zooyardFactory id="serverAppHelloService" zooyardType="RpcContractThrift.IHelloService, RpcContractThrift">
    <zy:property name="TheProtocolClient" ref="ThriftProtocolClient" />
  </zy:zooyardFactory>


  <object id="ThriftProtocolClient" type="Zooyard.Rpc.ThriftImpl.ThriftProtocolClient, Zooyard.Rpc.ThriftImpl" >
    <property name="TheTransport" ref="HelloTransportService" />
    <property name="TheThriftClient" ref="HelloClientService" />
  </object>

  <zy:zooyardFactory id="grpcHelloService" zooyardType="RpcContractGrpc.IHelloService, RpcContractGrpc">
    <zy:property name="TheProtocolClient" ref="GrpcProtocolClient" />
  </zy:zooyardFactory>


  <object id="GrpcProtocolClient" type="Zooyard.Rpc.GrpcImpl.GrpcProtocolClient, Zooyard.Rpc.GrpcImpl" >
    <property name="TheChannel" ref="GrpcChannel" />
    <property name="TheGrpcClient" ref="GrpcClient" />
    <property name="ChannelCredentials" expression="T(Grpc.Core.ChannelCredentials).Insecure" />
    <property name="ClientTimeout" value="5000" />
  </object>


  <zy:zooyardFactory id="wcfHelloService" zooyardType="RpcContractWcf.IHelloService, RpcContractWcf">
    <zy:property name="TheProtocolClient" ref="WcfProtocolClient" />
  </zy:zooyardFactory>


  <object id="WcfProtocolClient" type="Zooyard.Rpc.WcfImpl.WcfProtocolClient&lt;RpcContractWcf.HelloService.IHelloServiceWcf>, Zooyard.Rpc.WcfImpl" >
    <property name="Binding" ref="helloBinding" />
    <property name="EndpointAddress" ref="helloEndpointAddress" />
  </object>-->

  <zy:zooyardFactory id="thriftHelloService" zooyardType="RpcContractThrift.IHelloService, RpcContractThrift">
    <zy:property name="ThePools" ref="zooyardPools" />
    <zy:property name="App" value="Home" />
    <zy:property name="Version" value="1.0" />
  </zy:zooyardFactory>
  
  <zy:zooyardFactory id="wcfHelloService" zooyardType="RpcContractWcf.IHelloService, RpcContractWcf">
    <zy:property name="ThePools" ref="zooyardPools" />
  </zy:zooyardFactory>

  <zy:zooyardFactory id="grpcHelloService" zooyardType="RpcContractGrpc.IHelloService, RpcContractGrpc">
    <zy:property name="ThePools" ref="zooyardPools" />
  </zy:zooyardFactory>
  
  <zy:zooyardFactory id="httpHelloService" zooyardType="RpcContractHttp.IHelloService, RpcContractHttp">
    <zy:property name="ThePools" ref="zooyardPools" />
  </zy:zooyardFactory>
  
  <zy:zooyardFactory id="akkaHelloService" zooyardType="RpcContractAkka.IHelloService, RpcContractAkka">
    <zy:property name="ThePools" ref="zooyardPools" />
  </zy:zooyardFactory>

  <zy:zooyardFactory id="nettyHelloService" zooyardType="RpcContractNetty.IHelloService, RpcContractNetty">
    <zy:property name="ThePools" ref="zooyardPools" />
  </zy:zooyardFactory>
  

  <object id="zooyardPools" type="Zooyard.Rpc.ZooyardPools, Zooyard.Rpc" singleton="true">
    <!--pools -->
    <constructor-arg name="pools" ref="clientPools"/>
    <!--loadbalances-->
    <constructor-arg name="loadbalances" ref="LoadBalances"/>
    <!--clusters-->
    <constructor-arg name="clusters" ref="Clusters"/>
    <!--address   forks zooyard://localhost?cluster=forking&interface=-->
    <!--<constructor-arg name="address" >
      <value><![CDATA[zooyard://localhost?Hello.loadbance=roundrobin&RpcContractThrift.IHelloService.Hello.cache=lru]]></value>
    </constructor-arg>-->
    <constructor-arg name="address" >
      <value><![CDATA[zooyard://localhost?interface.RpcContractThrift.IHelloService.cluster=failfast]]></value>
    </constructor-arg>
    <!--urls -->
    <constructor-arg name="urls" ref="clientUrls"/>
    <!--caches -->
    <constructor-arg name="caches" ref="Caches"/>
    
  </object>
  
  

  <object id="clientPools" type="System.Collections.Generic.Dictionary&lt;string, Zooyard.Core.IClientPool&gt;, mscorlib">
    <constructor-arg>
      <dictionary key-type="string" value-type="Zooyard.Core.IClientPool, Zooyard.Core">
        <entry key="RpcContractThrift.IHelloService" value-ref="ThriftClientPool"/>
        <entry key="RpcContractWcf.IHelloService" value-ref="WcfClientPool"/>
        <entry key="RpcContractGrpc.IHelloService" value-ref="GrpcClientPool"/>
        <entry key="RpcContractHttp.IHelloService" value-ref="HttpClientPool"/>
        <entry key="RpcContractAkka.IHelloService" value-ref="AkkaClientPool"/>
        <entry key="RpcContractNetty.IHelloService" value-ref="NettyClientPool"/>
      </dictionary>
    </constructor-arg>
  </object>
  
  <object id="clientUrls" type="System.Collections.Generic.List&lt;string&gt;, mscorlib">
    <constructor-arg>
      <list element-type="string">
        <value><![CDATA[TCompactProtocol://127.0.0.1:10009?proxy=HelloService&interface=RpcContractThrift.IHelloService]]></value>
        <!--<value><![CDATA[TCompactProtocol://127.0.0.1:10019?proxy=HelloService&interface=RpcContractThrift.IHelloService]]></value>
        <value><![CDATA[TCompactProtocol://127.0.0.1:10029?proxy=HelloService&interface=RpcContractThrift.IHelloService]]></value>-->
        
        <value><![CDATA[http://127.0.0.1:30000/Hello/HelloServiceWcfImpl?proxy=HelloService&interface=RpcContractWcf.IHelloService&binding=wshttp]]></value>
        <!--<value><![CDATA[net.tcp://127.0.0.1:30010/Hello/HelloServiceWcfImpl?proxy=HelloService&interface=RpcContractWcf.IHelloService&binding=net.http]]></value>
        <value><![CDATA[net.tcp://127.0.0.1:30020/Hello/HelloServiceWcfImpl?proxy=HelloService&interface=RpcContractWcf.IHelloService&binding=net.http]]></value>-->
        
        <value><![CDATA[grpc://127.0.0.1:10008?proxy=HelloService&interface=RpcContractGrpc.IHelloService]]></value>
        <!--<value><![CDATA[grpc://127.0.0.1:10018?proxy=HelloService&interface=RpcContractGrpc.IHelloService]]></value>
        <value><![CDATA[grpc://127.0.0.1:10028?proxy=HelloService&interface=RpcContractGrpc.IHelloService]]></value>-->
        
        <value><![CDATA[http://localhost:10010/hello?proxy=HelloService&interface=RpcContractHttp.IHelloService&CallNameVoid.parametertype=url&CallNameVoid.methodtype=get&CallName.parametertype=url&CallName.methodtype=get&CallVoid.parametertype=url&CallVoid.methodtype=get&Hello.parametertype=url&Hello.methodtype=get&SayHello.parametertype=url&SayHello.methodtype=get&ShowHello.methodtype=post]]></value>
        
        <value><![CDATA[akka.tcp://localhost:10011/user?proxy=HelloService&interface=RpcContractAkka.IHelloService&cluster=failfast]]></value>
        <!--<value><![CDATA[akka.tcp://localhost:10021/user?proxy=HelloService&interface=RpcContractAkka.IHelloService]]></value>
        <value><![CDATA[akka.tcp://localhost:10031/user?proxy=HelloService&interface=RpcContractAkka.IHelloService]]></value>-->


        <value><![CDATA[socket://127.0.0.1:12121?interface=RpcContractNetty.IHelloService&cluster=failfast]]></value>
      </list>
    </constructor-arg>
  </object>

</objects>